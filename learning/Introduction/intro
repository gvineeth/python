It was created by Guido van Rossum in 1991

Features and Advantages:

It is easy to read, write, learn
Interpreted Language
Dynamically-Typed Language
Object-Oriented
Platform-Independent


Applications:

Web Development
Machine Learning and Artificial Intelligence
Data Science.


keywords:

False	  await	    else	  import	  pass
None	  break	    except	in	      raise
True	  class	    finally	is	      return
and	    continue	for	    lambda	  try
as	    def	      from	  nonlocal	while
assert	del	      global	not	      with
async	  elif	    if	    or	      yield

True, False, None
and, or, not, in, is
Iteration Keywords – for, while, break, continue
Conditional keywords – if, else, elif
Return Keywords – Return, Yield
Import, From
Exception Handling Keywords – try, except, raise, finally, and assert
Global, Nonlocal


Inputs:

a=input()
n=int(input())
b, c, d=input("Enter three values: ").split()
x, y, z = [int(x) for x in input("Enter three values: ").split()]
e = list(map(int, input("Enter multiple values: ").split()))
p = [int(x) for x in input("Enter multiple values: ").split()]
q = [int(x) for x in input("Enter multiple values: ").split(',')]


Output:
print(value(s), sep= ‘ ‘, end = ‘\n’, file=file, flush=flush)

print('python3',1,True,sep='-',end=";")
print('python3',1,True)
>>>python3-1-True;python3 1 True

a=1
b=5
print(f'Results of the {a} and {b}')

a='python'
print(f'powerfull {a}')
print(f'powerfull {a!r}') #'python' # repr 

l=[1,2,3,4,5,6]
print(l,*l) # [1, 2, 3, 4, 5, 6] 1 2 3 4 5 6

print(word.center(10,'a')) # aapythonaa

print("This article is written in {}".format("Python")) # This article is written in Python
print("Hi ! My name is {} and I am {} years old".format("User", 19)) # Hi! My name is User and I am 19 years old
print("{0} love {1}!!".format("I","python")) # I love python!!
print("{1} love {0}!!".format("me","python")) # python love me!!
print("{1} love {0} {k}".format("me","python",k="so much")) # python love me so much
print("%10s" % ('python', )) #     python
print("%-10s" % ('python', )) # python
print("%.5s" % ('python', )) # pytho
print("%d rupees" % (1000, )) # 1000 rupees

Some another useful Type Specifying 
%u unsigned decimal integer
%o octal integer
f – floating point display
b – binary
o – octal
%x – hexadecimal with lowercase letters after 9
%X– hexadecimal with uppercase letters after 9
e – exponent notation

print("python is {:f}% good".format(100)) # python is 100.000000% good
print("python is {:.3f}% good".format(100)) # python is 100.000% good
print("python is {:.0f}% good".format(100)) # python is 100% good
print("The {0} of 10 is {1:b}".format("binary", 10)) # The binary of 10 is 1010
print("The {0} of 10 is {1:o}".format("octal", 10)) # The octal of 10 is 12
print("{:10} is {:5}%".format("python", "100")) # python     is 100  %
print("python is {:5}%".format(100)) # python is   100%
print("{:10} is {:5}%".format("python", 100)) # python     is   100%
print("{:*^20s}".format("python")) # *******python*******

for i in range(3, 10):
    print("{:6d} {:6d}".format(i, i ** 2))
/*

     3      9
     4     16
     5     25
     6     36
     7     49
     8     64
     9     81

*/

introduction = 'My name is {first_name}, I am a {language}.'
intro = {
	'first_name': 'python',
	'language': 'program',
}
print(introduction.format(**intro)) # My name is python, I am a program.

print('python'.ljust(10, '0')) # python0000
print("python3".rjust(10,'0')) # 000python3
print("python3".rjust(3,'0')) # python3
